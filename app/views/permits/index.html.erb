<div class="container col-11">
  <% if params[:s] %>
    <%= render 'shared/search_results' %>
  <% end %>
  <!-- top header with add button -->
  <%= render 'shared/index_top_section' %>

  <!-- cards - DONE -->
  <% if current_user.approver %>
    <%= render 'shared/index_cards_approver' %>
  <% elsif current_user.author %>
    <%= render 'shared/index_cards_author' %>
  <% elsif current_user.admin %>
  <% else %>
    <%= render 'shared/index_cards_worker' %>
  <% end %>
  <!-- table -->
  <% if current_user.admin %>
    <%= render 'shared/index_table_admin' %>
  <% elsif current_user.author || current_user.approver %>
    <%= render 'shared/index_table_auth_app.html.erb' %>
  <% else %>
    <%= render 'shared/index_table_worker.html.erb' %>
  <% end %>
</div>

<script>

const dateMaker = (date, time) => {
  const dateArr = date.split("-");
  const hourArr = time.split(":");
  const d = {
    day: parseInt(dateArr[0], 10),
    month: parseInt(dateArr[1], 10) - 1,
    year: parseInt(dateArr[2], 10) + 2000,
    hour: parseInt(hourArr[0], 10),
    minutes: parseInt(hourArr[1], 10)
  }
  return new Date(d.year, d.month, d.day, d.hour, d.minutes)
};

const validity = (startDate, endDate) => {
  let now = new Date();
  const diffEnd = endDate - now;
  const diffStart = 1;
  const minute = 1000 * 60;
  const hour = minute * 60;
  const day = hour * 24;
  const diff_mins = Math.floor(diffEnd / minute);
  const diff_hrs = Math.floor(diffEnd / hour);
  const diff_days = Math.floor(diffEnd / day);
  if (now > endDate) {
    console.log("expired");
  }
  else if (now >= startDate) {
    if (diff > day){
      console.log(`valid, expires in ${diff_days}d ${diff_hrs - diff_days * 24}h`);
    }
    else if (diff > hour) {
      console.log(`valid, expires in ${diff_hrs}h ${diff_mins - diff_hrs * 60}m`);
    }
    else {
      console.log(`valid, expires in ${diff_mins}m`);
    }
  }
  else {
    console.log("not yet valid", now - endDate)
  }
};

setInterval(function(){
  const permits = document.querySelectorAll('.card-bottom');
  permits.forEach(permit => {
    const text = permit.innerText.split(" ");
    const startDate = text[1];
    const startTime = text[2];
    const endDate = text[4];
    const endTime = text[5];
    const start = dateMaker(startDate, startTime);
    const end = dateMaker(endDate, endTime);
    validity(start, new Date(2019, 5, 1, 16, 0, 0, 0));
  });
  }, 3000);

</script>


<!-- <h1>to approve</h1>
<% @pending_permits.each do |permit| %>
  <%= link_to permit.title, permit_path(permit) %>
<% end %> -->

<!--
<h1>approved</h1>
<% @approved_permits.each do |permit| %>
  <%= link_to permit.title, permit_path(permit) %>
<% end %>

<h1>Rejected</h1>
<% @rejected_permits.each do |permit| %>
<%= link_to permit.title, permit_path(permit) %>
<% end %> -->
